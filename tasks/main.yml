---
# tasks file for MariaDBServer
#set facts
- name: Set Facts for Centos/RHEL
  block:
    - name: Set facts for Centos/RHEL 8
      set_fact:
        packages: "python3-firewall, firewalld, python3-PyMySQL, mariadb-server"
      when: ansible_distribution_major_version is match('8')
    - name: Set facts for Centos/RHEL 7
      set_fact:
        packages: "mariadb-server , python-firewall, firewalld, python2-PyMySQL"
      when: ansible_distribution_major_version is match('7')
  when: ansible_distribution == "CentOS" or ansible_distribution == "RedHat"
# install packages
- name: Install MariaDB required packages
  package:
    name: "{{ packages }}"
    state: present
# start service
- name: Ensure service is started and enabled
  service:
    name: mariadb
    state: started
    enabled: true
# setup root password
- name: Setup mariadb root password
  mysql_user:
    login_user: root
    login_password: "{{ root_password }}"
    name: root
    password: "{{ new_root_password }}"
    host_all: true
  when: set_root_pw == true
  notify: Restart mariadb
- name: Flush all handlers
  meta: flush_handlers
- name: Set password
  set_fact:
    root_password: "{{ new_root_password }}"
  when: set_root_pw == true
# cleanup anonymous users
- name: Delete anonymous users
  mysql_user:
    login_user: root
    login_password: "{{ root_password }}"
    user: ""
    host_all: true
    state: absent
  notify: Restart mariadb
# cleanup test databases
- name: Delete test database
  mysql_db:
    login_user: root
    login_password: "{{ root_password }}"
    db: test
    state: absent
  notify: Restart mariadb
#enable mariadb
- name: Ensure Firewalld is active
  service:
    name: firewalld
    state: started
    enabled: true
#firewall
- name: Add mariadb service in firewalld
  firewalld:
    service: mysql
    state: enabled
    permanent: true
    immediate: true
- name: Flush all handlers
  meta: flush_handlers
# create database
- name: Create database
  mysql_db:
    name: "{{ sql_db }}"
    state: present
    login_user: root
    login_password: "{{ root_password }}"
# create user
- name: Create user with all database privileges
  mysql_user:
    name: "{{ sql_user }}"
    password: "{{ sql_password }}"
    state: present
    priv: '*.*:ALL'
    login_user: root
    login_password: "{{ root_password }}"
